---
// foundations
import Text from "@/components/foundations/elements/Text.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import PortableText from "@/components/foundations/elements/PortableText.astro";
import LucideIcon from "../foundations/elements/LucideIcon.astro";
import { type AllowedIcon } from "@/data/constants";

interface Props {
  feature?: {
    header?: string;
    subheading?: any[];
    features?: Array<{
      id: string;
      title: string;
      description: string;
      icon: string;
    }>;
  };
}


const { feature } = Astro.props;
const { header, subheading, features = [] } = feature || {};

// Debug: inspect icon values coming from CMS
console.log("Feature2 icons:", features.map((f) => f.icon));
console.log("Feature2 first icon + type:", features[0]?.icon, typeof features[0]?.icon);

// Don't render if no feature data
if (!feature || !features || features.length === 0) {
  return null;
}
---

<section class="feature-2">
  <Wrapper variant="standard" class="py-8 border-y">
    {header && (
      <div class="max-w-xl text-balance">
        <Text
          tag="h2"
          variant="displayMD"
          class="font-serif font-medium tracking-tight feature-header"
        >
          {header}
        </Text>
        {subheading && (
          <div class="mt-4 text-lg sm:text-xl md:text-2xl lg:text-3xl font-serif feature-subheading ">
            <PortableText value={subheading} />
          </div>
        )}
      </div>
    )}
    <div
      class="items-center mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-2 lg:gap-3 feature-grid"
    >
      {
        features.map((feature, index) => (
          <div class="flex flex-col h-full p-6 bg-sand-100 dark:bg-sand-300 rounded-xl group hover:bg-white dark:hover:bg-sand-200 hover:shadow-2xl duration-300 outline-transparent hover:outline hover:outline-sand-100 feature-item">
            <div class={`inline-flex p-4 bg-white dark:bg-sand-200 rounded-lg group-hover:bg-sand-100 dark:group-hover:bg-sand-100 duration-300 group-hover:-rotate-12 group-hover:-translate-y--1 w-fit feature-icon`}>
              <LucideIcon icon={feature.icon as AllowedIcon} class={index % 2 === 0 ? "text-blue-400" : "text-accent-400"} size="base"/>
            </div>
            <Text
              tag="h3"
              variant="textLG"
              class="mt-8 font-medium text-base-900 feature-title"
            >
              {feature.title}
            </Text>
            <Text tag="p" variant="textSM" class="mt-2 feature-description text-base-500 dark:text-neutral-600">
              {feature.description}
            </Text>
          </div>
        ))
      }
    </div>
  </Wrapper>
</section>
