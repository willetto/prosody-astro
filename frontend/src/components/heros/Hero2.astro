---
// foundations
import Text from "@/components/foundations/elements/Text.astro";
import Link from "@/components/foundations/elements/Link.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import SanityImage from "@/components/foundations/elements/SanityImage.astro";
import PortableText from "@/components/foundations/elements/PortableText.astro";

interface Props {
  feature?: {
    header?: string;
    subheader?: any[];
    primaryCtaLabel?: string;
    primaryCtaHref?: string;
    secondaryCtaLabel?: string;
    secondaryCtaHref?: string;
    image?: {
      asset?: { _ref?: string };
      assetAltText?: string;
      alt?: string;
    };
  };
}

const { feature } = Astro.props as Props;

---

<section class="hero-2">
  <Wrapper variant="standard" class="pt-28 pb-12 overflow-hidden border-b">
    <!-- TODO: Improve grid system -->
    <div class="grid gap-8 grid-cols-1 md:grid-cols-3 lg:grid-cols-4">
      <div class="flex flex-col gap-8 justify-between h-full md:col-span-2">
        <div class="text-left text-balance">
          <Text
            tag="h1"
            variant="displayLG"
            class="font-serif font-medium tracking-tight text-heading-text-color text-balance"
          >
            {feature?.header || "Hero Header Text"}
          </Text>
          {Array.isArray(feature?.subheader) && feature.subheader.length > 0 ? (
          <div class="mt-4 text-xl md:text-2xl lg:text-3xl font-serif hero-subheading">
              <PortableText value={feature.subheader} />
            </div>
          ) : (
            <Text tag="p" variant="textBase" class="max-w-xl mt-4 text-body-text-color">
              {"No more guessing games. Your emails get delivered, show up where they should, and scale like a champ."}
            </Text>
          )}
        </div>

        <div class="flex flex-wrap items-center justify-start w-full gap-2">
          {(feature?.primaryCtaLabel && feature?.primaryCtaHref) && (
            <Link size="sm" variant="accent" href={feature.primaryCtaHref}>{feature.primaryCtaLabel}</Link>
          )}
          {(feature?.secondaryCtaLabel && feature?.secondaryCtaHref) && (
            <Link size="sm" variant="muted" href={feature.secondaryCtaHref}>{feature.secondaryCtaLabel}</Link>
          )}
        </div>
      </div>
      {feature?.image?.asset?._ref && (
        <SanityImage
          image={feature.image}
          class="w-full h-full lg:h-auto rounded-xl md:col-span-1 lg:col-span-2"
        />
      )}
    </div>
  </Wrapper>
</section>

<style>
  .hero-subheading{
    color: var(--body-text-color);
  }
</style>