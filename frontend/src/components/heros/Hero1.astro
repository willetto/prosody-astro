---
// foundations
import Text from "@/components/foundations/elements/Text.astro";
import Link from "@/components/foundations/elements/Link.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import SanityImage from "@/components/foundations/elements/SanityImage.astro";
import PortableText from "@/components/foundations/elements/PortableText.astro";

interface Props {
  feature?: {
    header?: string;
    subheader?: any[];
    primaryCtaLabel?: string;
    primaryCtaHref?: string;
    secondaryCtaLabel?: string;
    secondaryCtaHref?: string;
    image?: {
      asset?: { _ref?: string };
      assetAltText?: string;
      alt?: string;
    };
  };
}

const { feature } = Astro.props as Props;
---

<section class="hero-1">
  <Wrapper variant="standard" class="pt-28 pb-8">
    <div class="text-left text-balance">
      <Text
        tag="h1"
        variant="displayMD"
        class="font-serif font-medium tracking-tight text-heading-text-color"
      >
        {feature?.header || "Hero Header Text"}
      </Text>
      
      {Array.isArray(feature?.subheader) && feature.subheader.length > 0 ? (
        <div class="mt-4 text-lg sm:text-xl md:text-2xl lg:text-3xl font-serif hero-subheading">
          <PortableText value={feature.subheader}/>
        </div>
      ) : (typeof feature?.subheader === "string" && feature.subheader) ? (
        <Text tag="p" variant="textBase" class="max-w-xl mt-4 text-body-text-color">
          {feature.subheader}
        </Text>
      ) : null}
    </div>
    <div
      class="flex flex-wrap items-start justify-center w-full mt-10 just gap-2"
    >
      {(feature?.primaryCtaLabel && feature?.primaryCtaHref) && (
        <Link size="sm" variant="accent" href={feature.primaryCtaHref}>{feature.primaryCtaLabel}</Link>
      )}
      {(feature?.secondaryCtaLabel && feature?.secondaryCtaHref) && (
        <Link size="sm" variant="muted" href={feature.secondaryCtaHref}>{feature.secondaryCtaLabel}</Link>
      )}
    </div>
    {feature?.image?.asset?._ref && (
      <div class="mt-8">
        <SanityImage image={feature.image} class="w-full h-auto rounded-xl" />
      </div>
    )}
  </Wrapper>
</section>

<style>
  .hero-subheading{
    color: var(--body-text-color);
  }
</style>