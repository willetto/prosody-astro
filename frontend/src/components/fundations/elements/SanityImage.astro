---
// Using native <img> because src is a remote Sanity CDN URL

interface Props {
  image: { asset?: { _ref?: string }; alt?: string };
  width?: number;
  height?: number;
  class?: string;
  loading?: "lazy" | "eager";
}

const { image, width, height, class: className, loading = "lazy" } = Astro.props as Props;

const projectId = import.meta.env.SANITY_STUDIO_PROJECT_ID;
const dataset = import.meta.env.SANITY_STUDIO_DATASET || "production";

const assetRef: string | undefined = image?.asset?._ref;

function sanityRefToUrl(ref?: string): string | null {
  // Ref format: image-<fileId>-<dimensions>-<format>
  if (!ref) return null;
  const parts = ref.split("-");
  const assetId = parts[1];
  const dimensions = parts[2];
  const format = parts[3];
  if (!assetId || !dimensions || !format) return null;
  // Sanity CDN requires the dimensions segment in the filename
  return `https://cdn.sanity.io/images/${projectId}/${dataset}/${assetId}-${dimensions}.${format}`;
}

const src = sanityRefToUrl(assetRef);
const alt = image?.alt || "";
---

{src ? (
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    class={className}
    loading={loading}
  />
) : null}


