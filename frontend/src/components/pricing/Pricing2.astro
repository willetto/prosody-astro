---
export const description = "Pricing section with three tiers";

// Components
import Text from "@/components/foundations/elements/Text.astro";
import Button from "@/components/foundations/elements/Button.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";

// Icons (import all used ones)
import Check from "@/components/foundations/icons/Check.astro";

const pricingOptions = [
  {
    id: "Pro",
    cardClass: "bg-sand-50 ",
    primaryTextColor: "text-base-900",
    secondaryTextColor: "brand-text-color",
    featuresBorderColor: "border-base-200",
    title: "Pro",
    monthly: "$29.00",
    annual: "$19.00",
    description:
      "For solo devs who just want their emails to work (without rage-quitting).",
    button: {
      text: "Get Started",
      variant: "accent",
    },
    features: [
      { text: "10,000 emails/mo" },
      { text: "1 custom domain" },
      { text: "Basic analytics (open & click)" },
      { text: "API access, no SDK required" },
      { text: "Developer-friendly docs" },
      { text: "Basic support (yes, from humans)" },
      { text: "Markdown, HTML, and MJML" },
    ],
  },
  {
    id: "Scale",
    cardClass: "bg-sand-100",
    primaryTextColor: "text-base-900",
    secondaryTextColor: "brand-text-color",
    featuresBorderColor: "border-base-200",
    title: "Scale",
    monthly: "$49.00",
    annual: "$39.00",
    description: "For teams tired of email platforms that require PhDs to use.",
    button: {
      text: "Get Started",
      variant: "accent",
    },
    features: [
      { text: "50,000 emails/mo" },
      { text: "Multiple custom domains" },
      { text: "Custom DKIM & SPF" },
      { text: "Webhook support" },
      { text: "Inbox previews (even Outlook)" },
      { text: "Email templating engine" },
      { text: "Click, open, and bounce tracking" },
      { text: "Team access + roles" },
      { text: "Light automation workflows" },
      { text: "Chat support" },
    ],
  },
  {
    id: "Enterprise",
    cardClass: "bg-sand-50 ",
    primaryTextColor: "text-base-900",
    secondaryTextColor: "brand-text-color",
    featuresBorderColor: "border-base-200",
    title: "Enterprise",
    monthly: "$99.00",
    annual: "$79.00",
    description:
      "For startups and teams that treat email as a core product, not an afterthought.",
    button: {
      text: "Upgrade Now",
      variant: "accent",
    },
    features: [
      { text: "100,000+ emails/mo" },
      { text: "Dedicated IPs (no sharing)" },
      { text: "SSO & enterprise auth" },
      { text: "Live log stream + debugging" },
      { text: "Blocklist monitoring & auto-removal" },
      { text: "Premium SLA & uptime guarantees" },
      { text: "VIP onboarding + migration" },
    ],
  },
  {
    id: "Elite",
    cardClass: "bg-sand-50 ",
    primaryTextColor: "text-base-900",
    secondaryTextColor: "brand-text-color",
    featuresBorderColor: "border-base-200",
    title: "Elite",
    monthly: "$199.00",
    annual: "$149.00",
    description:
      "For empires that send millions of emails and expect everything short of divine intervention.",
    button: {
      text: "Talk to Sales",
      variant: "default",
    },
    features: [
      { text: "1M+ emails/mo" },
      { text: "Fully managed dedicated IP pool" },
      { text: "Custom infrastructure setup" },
      { text: "Advanced compliance features" },
      { text: "Dedicated CSM & priority support" },
      { text: "Custom billing & invoicing" },
      { text: "White-glove onboarding + migration" },
    ],
  },
];
---

<section
  id="pricing-section"
  class="border-t border-base-200 border-dashed scroll-mt-24"
>
  <Wrapper variant="standard" class="pt-12 pb-4">
    <div class="text-center text-balance">
      <Text
        tag="h2"
        variant="displayMD"
        class="font-serif font-medium tracking-tight brand-heading-color"
      >
        Plans that grow with your ambition (or chaos)
      </Text>
      <Text
        tag="p"
        variant="textBase"
        class="max-w-xl mx-auto mt-4 brand-text-color"
      >
        Start free. Pay when your side project accidentally turns into a
        business.
      </Text>

      <!-- Pricing Toggle -->
      <div
        aria-labelledby="pricing-toggle"
        class="relative z-0 inline-flex justify-center p-1 mx-auto mt-8 overflow-hidden bg-white shadow ring-1 ring-base-200 ring-offset-2 gap-4 lg:mx-0 rounded-md w-fit"
      >
        <div
          id="toggle-slider"
          class="absolute inset-0 w-1/2 bg-base-50 rounded-md transition-transform duration-200 ease-in-out"
        >
        </div>

        <button
          id="monthly-btn"
          class="relative z-10 flex items-center justify-center w-full h-6 px-2 text-xs font-medium focus:outline-none transition-colors duration-300 text-base-600"
          type="button"
          aria-pressed="true"
        >
          Monthly
        </button>

        <button
          id="annual-btn"
          class="relative z-10 flex items-center justify-center w-full h-6 px-2 text-xs font-medium focus:outline-none transition-colors duration-300 focus:text-base-900 hover:text-base-900"
          type="button"
          aria-pressed="false"
        >
          Annual
        </button>
      </div>
    </div>

    <!-- Pricing Cards -->
    <div class="mt-12 grid grid-cols-1 gap-4 md:grid-cols-2">
      {
        pricingOptions.map((tier) => (
          <div class={`flex flex-col p-4 rounded-xl ${tier.cardClass}`}>
            <div class="flex flex-col">
              <Text
                tag="h3"
                variant="textBase"
                class={` font-medium text-base-900 ${tier.primaryTextColor}`}
              >
                {tier.title}
              </Text>
              <Text
                variant="displayLG"
                class={`font-medium flex items-baseline tracking-tighter mt-4 font-serif ${tier.primaryTextColor}`}
              >
                <span
                  class="pricing-amount"
                  data-monthly={tier.monthly}
                  data-annual={tier.annual}
                >
                  {tier.monthly}
                </span>
                <span
                  class={`text-sm font-normal tracking-normal ${tier.secondaryTextColor}`}
                >
                  <span class="monthly-text">/month</span>
                  <span class="annual-text" style="display: none;">
                    /annually
                  </span>
                </span>
              </Text>

              <Text
                tag="p"
                variant="textLG"
                class={`mt-4 text-balance ${tier.secondaryTextColor}`}
              >
                {tier.description}
              </Text>
              <div class="w-full mt-8">
                <Button class="w-full" variant={tier.button.variant} size="sm">
                  {tier.button.text}
                </Button>
              </div>
            </div>
            <div class={`mt-4 pt-4 border-t ${tier.featuresBorderColor}  `}>
              <Text
                tag="p"
                variant="textXS"
                class={`font-medium uppercase ${tier.secondaryTextColor}`}
              >
                {tier.title === "Momentum"
                  ? "Everything in Core plus:"
                  : "Core plan includes:"}
              </Text>
              <ul
                class={`flex flex-col mt-4 text-sm  gap-y-3 ${tier.primaryTextColor}`}
                role="list"
              >
                {tier.features.map((feature, index) => (
                  <li class="flex items-start gap-2">
                    <Check
                      size="sm"
                      class={`shrink-0 ${tier.secondaryTextColor}`}
                    />
                    <span>{feature.text}</span>
                  </li>
                ))}
              </ul>
            </div>
          </div>
        ))
      }
    </div>
  </Wrapper>

  <script type="module">
    // Initialize vanilla JS pricing toggle functionality
    document.addEventListener("DOMContentLoaded", function () {
      const monthlyBtn = document.getElementById("monthly-btn");
      const annualBtn = document.getElementById("annual-btn");
      const toggleSlider = document.getElementById("toggle-slider");
      const pricingAmounts = document.querySelectorAll(".pricing-amount");
      const monthlyTexts = document.querySelectorAll(".monthly-text");
      const annualTexts = document.querySelectorAll(".annual-text");

      // accent state is monthly
      let currentDuration = "monthly";

      // Function to update UI based on selected duration
      function updatePricingUI(duration) {
        // Update toggle slider position
        if (duration === "monthly") {
          toggleSlider.style.transform = "translateX(0)";
          monthlyBtn.classList.add("text-base-600");
          monthlyBtn.classList.remove(
            "focus:text-base-900",
            "hover:text-base-900"
          );
          annualBtn.classList.remove("text-base-600");
          annualBtn.classList.add("focus:text-base-900", "hover:text-base-900");
          monthlyBtn.setAttribute("aria-pressed", "true");
          annualBtn.setAttribute("aria-pressed", "false");
        } else {
          toggleSlider.style.transform = "translateX(100%)";
          annualBtn.classList.add("text-base-600");
          annualBtn.classList.remove(
            "focus:text-base-900",
            "hover:text-base-900"
          );
          monthlyBtn.classList.remove("text-base-600");
          monthlyBtn.classList.add(
            "focus:text-base-900",
            "hover:text-base-900"
          );
          monthlyBtn.setAttribute("aria-pressed", "false");
          annualBtn.setAttribute("aria-pressed", "true");
        }

        // Update pricing text
        pricingAmounts.forEach((amount) => {
          amount.textContent = amount.dataset[duration];
        });

        // Show/hide appropriate text
        if (duration === "monthly") {
          monthlyTexts.forEach((text) => (text.style.display = "inline"));
          annualTexts.forEach((text) => (text.style.display = "none"));
        } else {
          monthlyTexts.forEach((text) => (text.style.display = "none"));
          annualTexts.forEach((text) => (text.style.display = "inline"));
        }

        // Update current duration
        currentDuration = duration;
      }

      // Add event listeners to buttons
      monthlyBtn.addEventListener("click", function () {
        updatePricingUI("monthly");
      });

      annualBtn.addEventListener("click", function () {
        updatePricingUI("annual");
      });

      // Initialize UI
      updatePricingUI(currentDuration);
    });
  </script>
</section>
