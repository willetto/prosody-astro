---
// foundations
import Text from "@/components/foundations/elements/Text.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import SanityImage from "@/components/foundations/elements/SanityImage.astro";

interface Props {
  feature?: {
    header?: string;
    images?: Array<{
      image: { asset?: { _ref?: string; _id?: string; altText?: string }; assetAltText?: string; alt?: string };
      iconTitle?: string;
      class?: string;
      loading?: "lazy" | "eager";
    }>;
  };
}

const { feature } = Astro.props as Props;
const header = feature?.header;
const images = feature?.images ?? [];

if (!feature || images.length === 0) {
  return null;
}
---

<section>
  <Wrapper variant="standard" class="relative py-16 overflow-hidden border-b">
    {header && (
      <Text tag="h2"
          variant="displayMD"
          class="font-serif tracking-tight mb-16 text-center">
          {header}
      </Text>
    )}
    <div
      class="relative items-center justify-around justify-items-center grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-x-4 gap-y-8 rounded-xl icons-wrapper"
    >
      {
        images.map((img) => (
          <div class="icon-wrapper pointer-events-none">
            <SanityImage
              image={img.image}
              class={(img.class || "") + " w-full h-full max-h-[100px] object-contain"}
              loading={img.loading}
            />
            {img.iconTitle && (
              <p class="icon-title text-base font-medium">{img.iconTitle}</p>
            )}
          </div>
        ))
      }
    </div>
  </Wrapper>
</section>

<style>
  .icon-wrapper {
    width: 100px;
    height: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }
  .icon-title {
    text-align: center;
    color: var(--body-text-color);
    font-family: var(--font-mono);
  }
</style>
