---
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import Text from "@/components/foundations/elements/Text.astro";
import Link from "@/components/foundations/elements/Link.astro";

export interface Props {
  feature?: {
    header?: string;
    showBottomBorder?: boolean;
    testimonials?: Array<{
      _id: string;
      testimony: string;
      name: string;
      nameLink?: string;
      jobTitle?: string;
      company?: string;
      companyLink?: string;
    }>;
  };
}

const { feature } = Astro.props;
const { header, testimonials, showBottomBorder = false } = feature || {};

// Don't render if no testimonials are provided
if (!feature || !testimonials || testimonials.length === 0) {
  return null;
}
---

<section>
  <Wrapper variant="standard" class={showBottomBorder ? "py-16 border-b" : "py-16"}>
    <div class="text-center">
      {header && (
        <Text
          tag="h2"
          variant="displaySM"
          class="font-serif font-medium tracking-tight brand-heading-color mb-6"
        >
          {header}
        </Text>
      )}
      
      <div class="space-y-8">
        {testimonials.map((testimonial) => (
          <div class="max-w-2xl mx-auto">
            <div class="brand-text-color mb-4">
              <Text tag="blockquote" variant="displayXS" class="italic font-serif">
                "{testimonial.testimony}"
              </Text>
            </div>
            <div class="text-center">
              {testimonial.nameLink ? (
                <Link href={testimonial.nameLink} target="_blank" hideUnderline={true} class="font-semibold brand-heading-color hover:text-primary transition-colors">
                  {testimonial.name}
                </Link>
              ) : (
                <Text
                  tag="p"
                  variant="bodySM"
                  class="font-semibold brand-heading-color"
                >
                  {testimonial.name}
                </Text>
              )}
              {(testimonial.jobTitle || testimonial.company) && (
                <div class="brand-text-color">
                  {testimonial.jobTitle && testimonial.company ? (
                    <>
                      {testimonial.jobTitle} at {testimonial.companyLink ? (
                        <Link href={testimonial.companyLink} target="_blank" hideUnderline={true} class="hover:text-primary transition-colors">
                          {testimonial.company}
                        </Link>
                      ) : (
                        testimonial.company
                      )}
                    </>
                  ) : testimonial.jobTitle ? (
                    testimonial.jobTitle
                  ) : testimonial.company ? (
                    testimonial.companyLink ? (
                      <Link href={testimonial.companyLink} class="hover:text-primary transition-colors">
                        {testimonial.company}
                      </Link>
                    ) : (
                      testimonial.company
                    )
                  ) : null}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  </Wrapper>
</section>
